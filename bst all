#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
   struct node* left;
   struct node* right;
};

struct node* root=0;

void insert(int data)
{
    struct node* newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=data;
    newnode->left=newnode->right=0;

    if(root==0)
    {
        root=newnode;
    }
    else
    {
        struct node* t=root;
        while(1)
        {
             if(newnode->data<=t->data)
            {
                if(t->left==0)
                    {t->left=newnode;
                    break;}
                    else
                        t=t->left;
            }
            else
            {
                if(t->right==0)
                    {t->right=newnode;
                    break;
            }
            else
                t=t->right;
            }
        }
        }

}
void inorder(struct node* t)
{
    if(t==0)
        return;
         inorder(t->left);
     cout<<t->data<<"  ";
        inorder(t->right);
}
void preorder(struct node* t)
{
    if(t==0)
        return;
     cout<<t->data<<"  ";
        preorder(t->left);
        preorder(t->right);
}

void postorder(struct node* t)
{
    if(t==0)
        return;
          postorder(t->left);
        postorder(t->right);
     cout<<t->data<<"  ";

}
void find(int data)
{
    struct node* t=root;
    while(1)
    {
       if(t->data==data)
       {
           cout<<"found "<<data;
           break;
       }
       else if(data<t->data)
        {
            if(t->left==0)
            {
                cout<<"not found "<<data;
                break;
            }
            else
                t=t->left;
        }
        else
        {
            if(t->right==0)
            {
                cout<<"not found "<<data;
                break;
            }
            else
                t=t->right;
        }
    }

}


main()
{
int i,j,n,u=0,k=0;

insert(55);
insert(40);
insert(34);
insert(80);
insert(38);
insert(28);
insert(60);
insert(90);

cout<<" inorder ";
inorder(root);

cout<<endl<<" preorder ";
preorder(root);

cout<<endl<<" postorder ";
postorder(root);

cout<<endl;cout<<endl;
find(28);

cout<<endl;
find(99);

cout<<endl;
}
