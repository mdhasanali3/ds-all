struct node
{
    int data;
    struct node *prev;
    struct node *next;
};
struct node* head=0;

void insert_in_first(int value)
{
    struct node* temp=(struct node*)malloc(sizeof(struct node));
   temp->data=value;
   temp->prev=0;
    temp->next=0;
    if(head==0)
    head=temp;
    else
    {
     head->prev=temp;
     temp->next=head;
     head=temp;
    }
}
void insert_in_last(int value)
{
    struct node* temp=(struct node*)malloc(sizeof(struct node));
    temp->data=value;
    temp->prev=0;
    temp->next=0;
    if(head==0)
        head=temp;
    else
    {
        struct node* t;
        t=head;
        while(t->next!=0)
        {
            t=t->next;
        }t->next=temp;
}
}
void delete_node(int position)
{
    struct node* t;
    if(position==1)
{
    t=head;
    head=head->next;
    free(t);
}
else
{
 t=head;
 for(int i=0;i<=position-2;i++)
        {t=t->next;
}
  struct node* temp;
 temp=t->next;
 t->next=temp->next;
 free(temp);
}
}
void insert_in_sort_order(int value)
{
    struct node* temp=(struct node*)malloc(sizeof(struct node));
    temp->data=value;
    if(head==0||temp->data<head->data)
    {
        temp->next=head;
        head=temp;
    }
    else
    {
        struct node* temp2=head;
        struct node* temp1;
        temp1=temp->next;
        while(temp1!=0&&temp->data>temp1->data)
        {
            temp2=temp1;
            temp1=temp1->next;
        }
                temp2->next=temp;
                temp->next=temp1;
    }
}
void print()
{
    struct node* temp;
    temp=head;
    do
    {cout<<temp->data<<endl;
        temp=temp->next;
        if(temp->next==0)
cout<<temp->data<<endl;
        }while(temp->next!=0);
}

int main()
{
 head=0;

cout<<endl<<"   insert_in_first   "<<endl;
 insert_in_first(47);    insert_in_first(437);
 insert_in_first(7); insert_in_first(347);
  insert_in_first(4); insert_in_first(4747);

print();
cout<<endl<<"   insert_in_last   "<<endl;
insert_in_last(10);    insert_in_last(107);
 insert_in_last(70); insert_in_last(907);
  insert_in_last(40); insert_in_last(567);

print();

cout<<endl<<"   deletion   "<<endl;

delete_node(3);
delete_node(7);
delete_node(1);

print();

cout<<endl<<"   insert_in_sort_order  "<<endl;

insert_in_sort_order(50);
insert_in_sort_order(3);
insert_in_sort_order(500);

print();

    return 0;
}
